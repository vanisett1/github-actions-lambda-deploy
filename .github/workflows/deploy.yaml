name: Deploy to Viax

on:
  push:
    branches:
      - dev
    paths:
      - 'lambdas/**'  # Trigger on changes in the lambdas directory

jobs:
  find_lambdas:
    runs-on: ubuntu-latest
    outputs:
      lambdas: ${{ steps.set_lambdas.outputs.lambdas }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Find modified Lambda paths
      id: set_lambdas
      run: |
        echo "Finding modified Lambda paths..."
        paths=$(git diff --name-only HEAD^ HEAD | grep '^lambdas/' | cut -d'/' -f 2 | sort -u | jq -R . | jq -s .)
        echo "::set-output name=lambdas::$paths"
        echo "Found Lambda function paths: $paths"

  deploy:
    needs: find_lambdas
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lambda_path: ${{ fromJson(needs.find_lambdas.outputs.lambdas) }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        cd lambdas/${{ matrix.lambda_path }}
        npm install
        npm version $(jq -r '.version' package.json)-dev.${{ github.run_number }}
        npm run build

    - name: Run tests
      run: |
        cd lambdas/${{ matrix.lambda_path }}
        npm run test

    - name: Zip the package
      run: |
        cd lambdas/${{ matrix.lambda_path }}
        rm -f fcn.zip
        npm install --production
        zip -r fcn.zip package.json viax.yaml src node_modules

    - name: Deploy to Viax
      run: |
        cd lambdas/${{ matrix.lambda_path }}
        TOKEN=$(curl -X POST -d "grant_type=password&client_id=$CLIENT_ID&username=$VIAX_USERNAME&password=$VIAX_PASSWORD" $AUTH_URL | jq -r '.access_token')
        curl --request POST \
          --url "$API_URL" \
          --header "Authorization: Bearer $TOKEN" \
          --header 'Content-Type: multipart/form-data' \
          --form 'operations={ 
            "operationName": "upsertFunction",
            "query": "mutation upsertFunction($file: Upload!) { upsertFunction(input: { fun: $file }) { uid } }",
            "variables": { "file": null }
          }' \
          --form 'map={ "File":["variables.file"] }' \
          --form File=@./fcn.zip
