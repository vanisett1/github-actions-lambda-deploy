name: Deploy Lambdas

on:
  push:
    branches:
      - dev
    paths:
      - 'lambdas/**'

  workflow_dispatch:
    inputs:
      lambda_name:
        description: 'Name of the lambda to deploy (use "all" to deploy all lambdas)'
        required: false
        type: string

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_lambdas: ${{ steps.changes.outputs.changed_lambdas }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changes
        run: |
          # Function to extract unique lambda directories
          get_lambda_dirs() {
            local paths="$1"
            echo "$paths" | awk -F/ '{OFS="/"; print $1,$2,$3}' | sort -u | awk '!seen[$0]++'
          }

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.lambda_name }}" = "all" ]; then
              changed_lambdas=$(find lambdas -type d -mindepth 1 -maxdepth 3 | get_lambda_dirs | jq -R -s -c 'split("\n")[:-1]')
            elif [ -n "${{ github.event.inputs.lambda_name }}" ]; then
              changed_lambdas=$(find lambdas -type d -name "${{ github.event.inputs.lambda_name }}" | get_lambda_dirs | jq -R -s -c 'split("\n")[:-1]')
            else
              changed_lambdas='[]'
            fi
          else
            changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^lambdas/' | get_lambda_dirs)
            changed_lambdas=$(echo "$changed_files" | jq -R -s -c 'split("\n")[:-1]')
          fi
          echo "Changed lambdas: $changed_lambdas"
          echo "changed_lambdas=$changed_lambdas" >> $GITHUB_OUTPUT

  deploy-lambdas:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.changed_lambdas != '[]' }}
    strategy:
      matrix:
        lambda: ${{ fromJson(needs.detect-changes.outputs.changed_lambdas) }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.19.1'

      - name: npm Install
        run: |
          cd ${{ matrix.lambda }}
          npm install

      - name: Bump version
        run: |
          cd ${{ matrix.lambda }}
          npm version $(jq -r '.version' package.json)-${{ github.run_number }}

      - name: npm build
        run: |
          cd ${{ matrix.lambda }}
          npm run build

      - name: Prepare configuration
        run: |
          cd ${{ matrix.lambda }}
          cp fnc.dev.yaml fnc.yaml

      - name: npm test
        run: |
          cd ${{ matrix.lambda }}
          npm run test

      - name: Package lambda
        run: |
          cd ${{ matrix.lambda }}
          rm -f fcn.zip
          npm install --production
          zip -r fcn.zip package.json fnc.yaml src node_modules

      - name: Deploy Lambda
        run: |
          cd ${{ matrix.lambda }}
          # deploy code

  no-changes:
    needs: detect-changes
    runs-on: ubuntu-latest
    if: ${{ needs.detect-changes.outputs.changed_lambdas == '[]' }}
    steps:
      - name: No changes detected
        run: echo "No changes detected or no lambda specified. No deployment needed."
