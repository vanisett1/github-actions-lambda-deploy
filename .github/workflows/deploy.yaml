name: Deploy Lambdas

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Filter Modified Lambda Functions
      uses: dorny/paths-filter@v2.2.1
      id: filter
      with:
        filters: .github/filters.yaml

    - name: Deploy Modified Lambdas
      run: |
        failed_lambdas=()

        # Loop through the modified lambdas from the filter
        for lambda in ${{ toJson(steps.filter.outputs) }}; do
          if [ "${{ steps.filter.outputs.$lambda }}" == "true" ]; then
            echo "Deploying Lambda: $lambda"
            cd lambdas/$lambda

            npm install
            npm version $(jq -r '.version' package.json)-${{ github.run_number }}
            npm run build
            cp viax.${GITHUB_REF_NAME}.yaml viax.yaml
            npm run test
            rm -f fcn.zip
            npm install --production
            zip -y -r fn.zip .

            # Deploy to Viax
            TOKEN=$(curl -X POST -d "grant_type=password&client_id=$CLIENT_ID&username=${{ secrets.VIAX_USERNAME }}&password=${{ secrets.VIAX_PASSWORD }}" ${{ secrets.AUTH_URL }} | jq -r '.access_token')
            response=$(curl --request POST \
              --url "${{ secrets.API_URL }}" \
              --header "Authorization: Bearer $TOKEN" \
              --header 'Content-Type: multipart/form-data' \
              --form 'operations={ 
                "operationName": "upsertFunction",
                "query": "mutation upsertFunction($file: Upload!) { upsertFunction(input: { fun: $file }) { uid } }",
                "variables": { "file": null }
              }' \
              --form 'map={ "File":["variables.file"] }' \
              --form File=@./fcn.zip)

            if [[ $response == *"uid"* ]]; then
              echo "Successfully deployed Lambda function $lambda."
            else
              echo "Failed to deploy Lambda function $lambda."
              failed_lambdas+=("$lambda")
            fi

            cd - # Move back to the previous directory
          fi
        done

        if [ ${#failed_lambdas[@]} -ne 0 ]; then
          echo "The following Lambda functions failed to deploy: ${failed_lambdas[@]}"
          exit 1
        fi
