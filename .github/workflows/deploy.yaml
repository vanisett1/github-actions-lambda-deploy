name: Deploy to Viax

on:
  push:
    branches:
      - dev
    paths:
      - 'lambdas/**'  # Trigger on changes in the lambdas directory

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lambda_path: ${{ github.event.head_commit.modified }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy only modified lambdas
      if: contains(matrix.lambda_path, 'lambdas/')
      run: |
        lambda_dir=$(echo ${{ matrix.lambda_path }} | grep -oP '^lambdas/[^/]+')
        if [ -n "$lambda_dir" ]; then
          cd $lambda_dir
          npm install
          npm version $(jq -r '.version' package.json)-${{ secrets.ENVIRONMENT }}.${{ github.run_number }}
          npm run build
          cp viax.${{ secrets.ENVIRONMENT }}.yaml viax.yaml
          npm run test
          rm -f fcn.zip
          npm install --production
          zip -r fcn.zip package.json viax.yaml src node_modules

          TOKEN=$(curl -X POST -d "grant_type=password&client_id=$CLIENT_ID&username=$VIAX_USERNAME&password=$VIAX_PASSWORD" $AUTH_URL | jq -r '.access_token')

          for i in {1..3}; do
            response=$(curl --request POST \
              --url "$API_URL" \
              --header "Authorization: Bearer $TOKEN" \
              --header 'Content-Type: multipart/form-data' \
              --form 'operations={ 
                "operationName": "upsertFunction",
                "query": "mutation upsertFunction($file: Upload!) { upsertFunction(input: { fun: $file }) { uid } }",
                "variables": { "file": null }
              }' \
              --form 'map={ "File":["variables.file"] }' \
              --form File=@./fcn.zip)
              
            if [[ $response == *"uid"* ]]; then
              echo "Successfully deployed Lambda function."
              break
            else
              echo "Failed to deploy Lambda function, retrying... ($i/3)"
              sleep 5
            fi
          done
        else
          echo "No relevant Lambda changes detected, skipping deployment."
        fi
